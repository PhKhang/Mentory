<main class="medium">
  <div class="card">
    <form action="" class="info">
      <h2>Create your account</h2>

      <label for="first-name">First name</label>
      <input type="text" name="first-name" placeholder="John..." required />
      <label for="last-name">Last name</label>
      <input type="text" name="last-name" placeholder="Doe..." required />
      <label for="email">Email</label>
      <input type="email" name="email" placeholder="john@mail..." required />
      <label for="password">Password</label>
      <input type="password" name="password" placeholder="" required />
      <p>Password must be at least 8 characters long with a mix of letters and
        numbers.</p>
      <label for="confirm-password">Confirm password</label>
      <input type="password" name="confirm-password" placeholder="" required />

      <div class="button-container">
        <button type="submit" id="next">Next</button>
      </div>
      
      <p>Already have an account? <a href="/login">Login</a></p>
    </form>

    <form action="" class="choice">
      <h2>I want to join as a:</h2>

      <div class="">
        <input type="radio" name="role" value="MENTEE" id="mentee" required />
        <label for="mentee">Mentee
          <p>I'm looking for guidance and want to learn from experienced
            professionals.</p>
        </label>
      </div>
      <div class="">
        <input type="radio" name="role" value="MENTOR" id="mentor" required />
        <label for="mentor">Mentor
          <p>I'm interested in both mentoring others and receiving mentorship.
          </p>
        </label>
      </div>

      <div class="button-container">
        <button type="button" id="back">Back</button>
        <button type="submit" id="submit">Submit</button>
      </div>
    </form>

  </div>
</main>

<style>
  .card {
    max-width: 28rem;
    background-color: #fff;
    border-radius: 0.5rem;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
    margin: 2rem auto;
    padding: 2rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    p {
      color: rgb(107, 114, 128);
      font-size: 0.8rem;
    }
  }

  .button-container {
    display: flex;
    justify-content: space-between;
  }
</style>

<script>
  var formData = new FormData();

  const backButton = document.getElementById('back');
  const nextButton = document.getElementById('next');
  const submitButton = document.getElementById('submit');

  const choiceForm = document.querySelector('form[class="choice"]');
  const infoForm = document.querySelector('form[class="info"]');

  infoForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const response = await fetch('/api/verify', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: emailInput.value,
      })
    });

    if (response.ok) {
      // Email already exists
      console.log('Email already exists!');
      emailInput.setCustomValidity('Email already exists. Please use a different email address.');
      return;
    }

    choiceForm.style.display = 'flex';
    infoForm.style.display = 'none';

    const form = document.querySelector('form[class="info"]');
    const newFormData = new FormData(form);
    for (const [key, value] of newFormData.entries()) {
      formData.append(key, value);
    }
    const data = Object.fromEntries(formData.entries());
    console.log(data);
  });

  choiceForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = document.querySelector('form[class="choice"]');
    const newFormData = new FormData(form);
    for (const [key, value] of newFormData.entries()) {
      formData.append(key, value);
    }
    const data = Object.fromEntries(formData.entries());
    console.log(data);

    try {
      const res = await fetch('/api/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });

      const response = await res.json();
      if (res.ok) {
        console.log('Login successful!');
        window.location.href = '/';
      } else {
        console.error('Login failed:', response.message);
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

  choiceForm.style.display = 'none';

  backButton.addEventListener('click', () => {
    choiceForm.style.display = 'none';
    infoForm.style.display = 'flex';
  });

  // switch page

  const emailInput = document.querySelector('input[name="email"]');
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  emailInput.addEventListener('input', () => {
    if (!emailRegex.test(emailInput.value)) {
      emailInput.setCustomValidity('Please enter a valid email address.');
    } else {
      emailInput.setCustomValidity('');
    }
  });

  const regex = /^(?=.*[a-zA-Z])(?=.*\d).{8,}$/;
  const passwordInput = document.querySelector('input[name="password"]');
  const confirmPasswordInput = document.querySelector('input[name="confirm-password"]');

  passwordInput.addEventListener('input', () => {
    if (!regex.test(passwordInput.value)) {
      passwordInput.setCustomValidity('Password must be at least 8 characters long with a mix of letters and numbers.');
    } else {
      passwordInput.setCustomValidity('');
    }
  });

  confirmPasswordInput.addEventListener('input', () => {
    if (passwordInput.value !== confirmPasswordInput.value) {
      confirmPasswordInput.setCustomValidity('Passwords do not match.');
    } else {
      confirmPasswordInput.setCustomValidity('');
    }
  });

</script>